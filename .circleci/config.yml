version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:14.15.0
    working_directory: ~/circleci-website-client-combinvest

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Configure npm
          command: |
            npm set progress=false
            npm config set depth 0
            npm cache clean --force
      - run:
          name: Update requirement dependecies
          command: npm install
      - run:
          name: Rebuild node-sass
          command: npm rebuild node-sass
      - save_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run:
          name: Build Angular
          command: |
            if [ "$CIRCLE_BRANCH" == "staging" ]
            then
            echo "BUILDING STAGING"
            echo "export KUBERNETES_CONTAINER=$KUBERNETES_STAGING_CONTAINER" >> env_file
            npm run build:ssr;
            else
            echo "BUILDING PRODUCTION"
            echo "export KUBERNETES_CONTAINER=$KUBERNETES_MASTER_CONTAINER" >> env_file
            npm run build:ssr;
            fi
      - save_cache:
          name: Save project cache
          key: project-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  deploy:
    <<: *container_config
    steps:
      - restore_cache:
          name: Restore project cache
          key: project-{{ .Branch }}-{{ .Revision }}
      - setup_remote_docker
      - run:
          name: Deploy to Docker Cloud
          command: |
            docker login -u $DOCKER_CLOUD_USERNAME -p $DOCKER_CLOUD_PASSWORD
            docker build -t $DOCKER_CLOUD_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM .
            docker push $DOCKER_CLOUD_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM
      - run:
          name: Install & configure aws-cli
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            sudo apt-get install unzip
            sudo unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
            aws --version
            aws eks update-kubeconfig --name $KUBERNETES_CLUSTER
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Setup Kubernetes
          command: |
            source env_file
            kubectl set image deployment/$KUBERNETES_CONTAINER-deployment $KUBERNETES_CONTAINER=$DOCKER_CLOUD_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM --namespace=$KUBERNETES_NAMESPACE
workflows:
  version: 2
  build_only:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - staging
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - staging
      - deploy:
          requires:
            - build
